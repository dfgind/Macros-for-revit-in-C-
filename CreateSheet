/*
 * Created by SharpDevelop.
 * User: diego.fernandez
 * Date: 10.06.2022
 * Time: 08:14
 * 
 * To change this template use Tools | Options | Coding | Edit Standard Headers.
 */
using System;
using Autodesk.Revit.UI;
using Autodesk.Revit.DB;
using Autodesk.Revit.UI.Selection;
using System.Collections.Generic;
using System.Linq;

namespace WorkingWithSheets
{
    [Autodesk.Revit.Attributes.Transaction(Autodesk.Revit.Attributes.TransactionMode.Manual)]
    [Autodesk.Revit.DB.Macros.AddInId("42DF1E68-721C-4F04-856B-E9DDD5713BD7")]
	public partial class ThisDocument
	{
		private void Module_Startup(object sender, EventArgs e)
		{

		}

		private void Module_Shutdown(object sender, EventArgs e)
		{

		}

		#region Revit Macros generated code
		private void InternalStartup()
		{
			this.Startup += new System.EventHandler(Module_Startup);
			this.Shutdown += new System.EventHandler(Module_Shutdown);
		}
		#endregion
		public void CreateSheets()
		{
			//define current document
			Document curDoc = this.Application.ActiveUIDocument.Document;
			
			//define starting sheet number
			int sheetNum = 101;
			
			//get all plans in current view
			FilteredElementCollector viewColl = new FilteredElementCollector(curDoc);
			viewColl.OfClass(typeof(ViewPlan));
			
			//get all title blocks in current model
			FilteredElementCollector tblockColl = new FilteredElementCollector(curDoc);
			tblockColl.OfCategory(BuiltInCategory.OST_TitleBlocks);
			
			//Create trnsaction
			Transaction curTrans = new Transaction(curDoc, "Create Sheets");
			curTrans.Start();
			
			//loop through views
			foreach (ViewPlan curView in viewColl.OrderBy(zz => zz.Name))
			{
			
				if (curView.ViewType == ViewType.FloorPlan)
				{
					if (curView.IsTemplate == false)
					{
					
						//get a floor plan- create the sheet
						ViewSheet newSheet;
						newSheet = ViewSheet.Create(curDoc, tblockColl.FirstElementId());
						
						//rename  sheet to view name
						newSheet.Name = curView.Name;
						
						//renumber sheet
						newSheet.SheetNumber = "A" + sheetNum.ToString();
						//increment sheet number
						sheetNum ++;
						
						//add view to sheet
						XYZ insPoint = new XYZ(1.75,1.25,0);
						Viewport curVP = Viewport.Create(curDoc, newSheet.Id, curView.Id, insPoint);
						
						
					}
				
				}
			}
			// commit changes and close transaction
			curTrans.Commit();
			curTrans.Dispose();
			
			//testmacro
			//TaskDialog.Show("test", viewColl.Count().ToString());
			
		}
	}
}
